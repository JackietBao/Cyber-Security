user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format ssl_logs '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$ssl_protocol" "$ssl_cipher"';
    access_log  logs/ssl_access.log  ssl_logs;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # HTTP 重定向到 HTTPS
    server {
        listen       80;
        server_name  jack-gm.com;

        return 301 https://$host$request_uri;
    }

    # HTTPS 服务器配置，启用双向认证
    server {
        listen 443 ssl;
        server_name jack-gm.com;

        ssl_certificate /root/chain.cer;
        ssl_certificate_key /root/server.key;
        
        # 配置客户端证书验证
        ssl_client_certificate /root/rootCA.crt;  # 用根证书来验证客户端证书
        ssl_verify_client on;  # 启用客户端证书验证
        ssl_verify_depth 3;  # 允许验证到3层，以适应根证书 -> 中间证书 -> 客户端证书的链条

        # 推荐的 SSL 配置
        ssl_protocols TLSv1.2;  # 启用 TLS 1.2 和 1.3
        ssl_prefer_server_ciphers off;  # 优先使用服务器定义的加密套件
        ssl_ciphers 'HIGH:!aNULL:!MD5';  # 安全的加密套件

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}


